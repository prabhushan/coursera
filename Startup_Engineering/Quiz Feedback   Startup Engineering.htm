<!DOCTYPE html>
<!-- saved from url=(0072)https://class.coursera.org/startup-001/quiz/feedback?submission_id=63947 -->
<html lang="en-US" class="wf-crimsontext-n4-active wf-active"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Quiz Feedback | Startup Engineering</title>
<link rel="stylesheet" href="https://dt5zaw6a98blc.cloudfront.net/site-static/903f432562ea23bc7920253c361b6e2882061f5c/css/spark.main.css">
<link rel="stylesheet" href="https://www.coursera.org/maestro/api/course/970374/course.css">
<link rel="icon" href="https://spark-public.s3.amazonaws.com/startup/static/images/favicon.ico">
<style type="text/css"></style><link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Crimson+Text:400&subset=latin"><script type="text/javascript" src="./Quiz Feedback   Startup Engineering_files/MathJax.js"></script><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuTitle {background-color: #CCCCCC; margin: -1px -1px 1px -1px; text-align: center; font-style: italic; font-size: 80%; color: #444444; padding: 2px 0; overflow: hidden}
.MathJax_MenuArrow {position: absolute; right: .5em; color: #666666}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_Menu_Close {position: absolute; width: 31px; height: 31px; top: -15px; left: -15px}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style></head>

<body><div id="MathJax_Message" style="display: none;"></div>
    
    <a href="https://class.coursera.org/startup-001/quiz/feedback?submission_id=63947#course-page-content" class="hidden">Skip Navigation</a>
    <div class="hidden">
        This page features MathJax technology to render mathematical formulae.
        If you are using a screen reader, please visit <a href="http://www.dessci.com/en/products/mathplayer/">MathPlayer</a> to download the plugin for your browser. Please note that this is an Internet Explorer-only plugin at this time.
    </div>

    <h1 class="hidden">Startup Engineering</h1>

    

<div class="course-topbar container-fluid" role="banner">

    <div class="row-fluid">
        
        <div class="span3">
          <a href="https://www.coursera.org/" class="course-topbar-logo" data-if-linkable="add-referrer"></a>
        </div>

        <div class="course-topbar-nav-container span9" style="float:right;">
            <h2 class="hidden">Top Navigation Bar</h2>

            <ul class="course-topbar-nav-list">
                <li class="course-topbar-nav-list-item">
                  <a href="https://www.coursera.org/courses" data-if-linkable="add-referrer">Courses</a>
                </li>

                                
                <li class="course-topbar-nav-list-item" tabindex="0" role="button" aria-haspopup="true" aria-expanded="false" aria-owns="course-topbar-my" data-popup="#course-topbar-my" data-popup-bind-open="mouseenter" data-popup-close="" style="cursor:pointer;" data-popup-direction="se">
                                        <a data-user-id="2064792">  
                        Prabhu 
                        <i class="icon-caret-down"></i>
                    </a>
                </li>
               
                            </ul>
        </div>
    </div>

    <div id="course-topbar-aboutus" class="course-topbar-sublist">
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/about/jobs" target="_new" data-if-linkable="add-referrer">Jobs</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/about/team" target="_new" data-if-linkable="add-referrer">Team</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/about/contact" target="_new" data-if-linkable="add-referrer">Contact Us</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/about/" target="_new" data-if-linkable="add-referrer">About Us</a>
    </div>

    <div id="course-topbar-my" class="course-topbar-sublist">
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/" target="_new">Courses</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/account/profile" target="_new">Profile</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/account/records" target="_new">Course Records</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/account/settings" target="_new">Settings</a>
        <a class="course-topbar-sublist-item" href="https://class.coursera.org/startup-001/class/preferences">Course Preferences</a>
        <a class="course-topbar-sublist-item" href="https://class.coursera.org/startup-001/auth/logout">Sign Out</a>
    </div>

</div>








<style type="text/css">
 


</style>
<div class="course-topbanner">
  <div class="course-topbanner-university-logo">
    <a href="https://www.coursera.org/stanford" class="coursera-university-color" target="_blank" data-if-linkable="add-referrer" title="https://www.coursera.org/stanford">
      <img src="./Quiz Feedback   Startup Engineering_files/university_logo" alt="stanford">
    </a>
  </div>

  
  <h1 class="course-topbanner-header">
      <a class="course-topbanner-name coursera-university-color" href="https://class.coursera.org/startup-001/class/index" data-if-linkable="modal-lock">
        Startup Engineering      </a>
      <br>
      <span class="course-topbanner-instructor" style="">
        by Balaji S. Srinivasan, Vijay S. Pande      </span>
  </h1>
</div>
    
        <div class="container-fluid" style="position:relative;">
        <div class="row-fluid">
            <div id="course-page-sidebar" role="navigation">
                <div class="course-navbar-container">
	<a href="https://class.coursera.org/startup-001/class/index">
	<img src="./Quiz Feedback   Startup Engineering_files/logo" style="width: 210px;height: 112px;margin: -15px 0px 8px 1px; box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.35);" alt="Course Home Page">
	</a>
<h2 class="hidden">Side Navigation Bar</h2>
<ul class="course-navbar-list">
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/startup-001/class/index" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Home							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/startup-001/wiki/view?page=homework" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Homework							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/startup-001/wiki/view?page=syllabus" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Syllabus							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/startup-001/lecture/index" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Video Lectures							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/startup-001/wiki/view?page=week1" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Week 1: Logistics and Introduction							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/startup-001/wiki/view?page=week2" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Week 2: Linux, Command Line, SSJS, Emacs, Git, Dotfiles							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/startup-001/forum/index" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Forums							</a>
						</li>
	
	
		
	
    </ul>

<ul style="list-style-type:none;margin-left: 10px;">
  <li><a href="http://help.coursera.org/" class="coursera-university-color" target="_blank" title="Open help articles in new window"><i class="icon-question-sign"></i> Help Articles</a></li>
</ul>

<ul style="list-style-type:none;margin-left: 10px;">
	
</ul>

</div>
            </div>
            <div id="course-page-content" role="main">
                                

<h2 class="course-page-header">
  <span>
Feedback — HW2 Quiz: SSJS Interactive Tutorial  </span>
  
  <a class="coursera-reporter-link" title="Click here if you&#39;re experiencing technical problems or found errors in the course materials." target="_blank" href="https://class.coursera.org/startup-001/class/reporter?url=http%3A%2F%2Fclass.coursera.org%2Fstartup-001%2Fquiz%2Ffeedback%3Fsubmission_id%3D63947&area=quiz&title=HW2+Quiz%3A+SSJS+Interactive+Tutorial">
     Help
  </a>
</h2>


<a data-coursera-admin-helpwidget-link="" rel="help" href="http://support.coursera.org/customer/portal/topics/237872-quizzes/articles" title="Quiz documentation" style="display:none;">Learn more</a>
<a data-coursera-admin-helpwidget-link="" rel="discuss" href="https://class.coursera.org/mooc/forum/tag?name=Quiz&forum_id=7" style="display:none;">Discuss</a>







<p class="course-quiz-feedback"> You submitted this quiz on <strong>Thu  4 Jul 2013  6:31 PM PDT (UTC -0700)</strong>. You got a score of <strong>9.00</strong> out of <strong>10.00</strong>. You can <a href="https://class.coursera.org/startup-001/quiz/start?quiz_id=149">attempt again</a>, if you'd like.</p>


            <form method="post" id="quiz_form">
    
        <div class="course-quiz-preamble">
        <h1>HW2 Quiz: SSJS Interactive Tutorial</h1>

<h2>Background</h2>

<p>We're going to learn a bit more about server-side Javascript (SSJS)
  via <tt>node</tt> by going through a slightly more complex script than we
  did last time and answering some questions in the process. Many of these
  answers will be self-evident as you do the problems; others may require a
  little bit of Googling, common sense, or (in a pinch) skimming of
  the <a href="http://www.nodebeginner.org/">Node Beginner Book</a>. As
  usual, we assume these commands are being executed on AWS on a EC2
  t1.micro instance running Ubuntu 12.04.2 LTS, unless otherwise
  specified. Note that part of the goal here is to teach you to read code;
  there are many little subtleties that one can only really glean by reading
  source code and being resourceful.</p>

<h2>Setup</h2>

<p>We're going to be working
  with <tt><a href="https://spark-public.s3.amazonaws.com/startup/code/market-research.js">market-research.js</a>
</tt>, a simple
  script which one can make progressively more sophisticated to do some
  basic market research on public companies. Over time we'll modify this code to 
  help analyze sectors and industries that are good places to start companies. But right
  now we're going to use it to look at the profits
  (<a href="http://en.wikipedia.org/wiki/Profit_(accounting)#Definition">aka
  earnings</a>) of some public technology companies by programmatically
  accessing the Yahoo Finance API. </p>

<p>First, execute the following commands to download and run the script.</p>

<pre>  # Download and make executable
  wget https://spark-public.s3.amazonaws.com/startup/code/market-research.js
  wget https://spark-public.s3.amazonaws.com/startup/code/market-research-wrapper.js

  # Install npm dependencies. This will create a node_modules directory in
  # the current working directory. Don't cd into other directories right
  # now; later we'll show how to install modules globally.
  npm install restler csv accounting

  # As a script
  node market-research.js 
  node market-research.js FB ORCL

  # As an executable
  chmod 777 market-research.js 
  ./market-research.js 
  ./market-research.js GOOG CRM

  # As a module, through another program invoked as a script
  node market-research-wrapper.js

  # As a module, through another program being invoked as an executable
  chmod 777 market-research-wrapper.js
  ./market-research-wrapper.js

  # Also as a module - but with the external code being input at the command line
  # via the -e flag
  node -e "require('./market-research.js')"
  node -e "var mr = require('./market-research.js'); mr.marketResearch();"
  node -e "var mr = require('./market-research.js'); mr.marketResearch([\"FB\",\"ORCL\"]);"
</pre>

<p>This illustrates several different ways to use the code: as a script
  explicitly with <tt>node</tt>, as a standalone command-line executable,
  and most interestingly as a module in another piece of code
  (<tt>market-research-wrapper.js</tt>). This is a very useful technique:
  develop and debug your code independently as a standalone script, with an
  eye towards externalizing one (or perhaps a few) key routines for
  invocation as a library by the larger codebase. </p>

<p>Here is the code itself:</p>

<h3><tt>market-research.js</tt></h3>
<pre>#!/usr/bin/env node
/*
Use the Yahoo Finance CSV API to do some basic market research calculations.

 - Background: http://greenido.wordpress.com/2009/12/22/yahoo-finance-hidden-api/
 - Example URL: http://finance.yahoo.com/d/quotes.csv?s=GOOG+FB+AAPL&amp;f=snj1pr
    s:  Symbol
    n:  Name
    j1: Market Capitalization (in billions)
    p:  Price-per-share (at previous close)
    r:  Price to Earnings Ratio

Further references.

 - https://github.com/danwrong/restler
 - https://github.com/wdavidw/node-csv
 - http://josscrowcroft.github.io/accounting.js
 - http://stackoverflow.com/questions/4981891/node-js-equivalent-of-pythons-if-name-main
 - http://nodejs.org/docs/latest/api/util.html#util_util_format_format

*/

var util = require('util');
var fs = require('fs');
var rest = require('restler');
var csv = require('csv');
var accounting = require('accounting');
var CSVFILE_DEFAULT = "market-research.csv";
var SYMBOLS_DEFAULT = ["GOOG", "FB", "AAPL", "YHOO", "MSFT", "LNKD", "CRM"];
var COLUMNS_DEFAULT = 'snj1pr'; // http://greenido.wordpress.com/2009/12/22/yahoo-finance-hidden-api
var HEADERS_DEFAULT = ["Symbol", "Name", "Market Cap", "Previous Close Price",
                       "P/E Ratio", "Shares", "EPS", "Earnings"];

var financeurl = function(symbols, columns) {
    return util.format(
        'http://finance.yahoo.com/d/quotes.csv?s=%s&amp;f=%s',
        symbols.join('+'),
        columns);
};

var marketCapFloat = function(marketCapString) {
    return parseFloat(marketCapString.split('B')[0]) * 1e9;
};

var csv2console = function(csvfile, headers) {
    console.log(headers.join("\t"));
    csv()
    .from.path(csvfile)
    .on('record', function(row, index) {
        var shares = Math.round(marketCapFloat(row[2])/row[3], 0);
        var eps = (row[3]/row[4]).toFixed(3);
        var earnings = accounting.formatMoney(eps * shares);
        outrow = row.concat([shares, eps, earnings]);
        console.log(outrow.join("\t"));
    });
};

var buildfn = function(csvfile, headers) {
    var response2console = function(result, response) {
        if (result instanceof Error) {
            console.error('Error: ' + util.format(response.message));
        } else {
            console.error("Wrote %s", csvfile);
            fs.writeFileSync(csvfile, result);
            csv2console(csvfile, headers);
        }
    };
    return response2console;
};

var marketResearch = function(symbols, columns, csvfile, headers) {
    symbols = symbols || SYMBOLS_DEFAULT;
    columns = columns || COLUMNS_DEFAULT;
    csvfile = csvfile || CSVFILE_DEFAULT;
    headers = headers || HEADERS_DEFAULT;
    var apiurl = financeurl(symbols, columns);
    var response2console = buildfn(csvfile, headers);
    rest.get(apiurl).on('complete', response2console);
};

if(require.main == module) {
    console.error('Invoked at command line.');
    var symbols = process.argv;
    if(symbols.length &gt; 2) {
        symbols = symbols.slice(2, symbols.length);
    } else {
        symbols = undefined;
    }
    marketResearch(symbols);
} else {
    console.error('Invoked via library call');
}

exports.marketResearch = marketResearch;
</pre>


<p>And here is a wrapper that shows how to invoke this as a module. We're
  able to do so because of the last line in <tt>market-research.js</tt>
  (namely <tt>exports.marketResearch = marketResearch;</tt>):</p>

<h3><tt>market-research-wrapper.js</tt></h3>
<pre>#!/usr/bin/env node
// Example of using market-research.js as a module
var mr = require('./market-research.js'); 
mr.marketResearch(["FB", "ORCL"]);
</pre>

<p>The best way to understand what the code does is to download it, edit it,
  change the arguments around, and so on. The quiz questions will walk you
  through the properties of individual functions. </p>

<h2>Hints and Tips</h2>

<h3>Understand what the code is doing</h3>

<p>We're hitting the Yahoo Finance API, pulling down data on stock symbols,
  and computing a few derived quantities (the number of shares, the earnings
  per share, and the total earnings or
  profit). This <a href="http://greenido.wordpress.com/2009/12/22/yahoo-finance-hidden-api/">blog
  post</a> gives more details. Note that some large public companies have
  <a href="http://www.theglobeandmail.com/globe-investor/investor-community/trading-shots/salesforce-growth-is-like-a-bad-dot-com-era-flashback/article12313334/">no
  profits</a>
  or <a href="http://www.nytimes.com/2013/04/26/technology/amazons-profit-falls-as-it-spends-heavily-on-distribution-centers.html?_r=0">minimal
  profits</a>; this will result in some "NaN" values when calculating things
  like earnings-per-share.
</p>


<h3>First-Class Functions in JS</h3>

<p> Note that the <tt>market-research.js</tt> script is <i>not</i> fully
  idiomatic node code and has been simplified in some key respects to
  minimize the use of asynchronous programming. That said, we weren't able
  to fully avoid the use of first-class functions, so to understand what's
  going on with <tt>buildfn</tt> and <tt>response2console</tt>, you'll want
  to read
  about <a href="http://helephant.com/2008/08/19/functions-are-first-class-objects-in-javascript/">Functions
  as first-class objects</a> in Javascript. Again, if you have
  a <a href="http://cs106b.stanford.edu/">CS106</a> or equivalent background,
  you should have already been exposed to this (perhaps under the name of
  "function pointers"), but it might be worthwhile to open up a separate
  buffer (using <tt>nano</tt> or <tt>emacs</tt>) and make a few test scripts
  to check your intuition.
</p>

<h3>Read the Library Documentation</h3>

<p>One of the most important skills when doing a startup is learning how to
  learn. My friend <a href="http://en.wikipedia.org/wiki/Jawed_Karim">Jawed
  Karim</a> has a saying: "There is no expert. You are the expert." This
  means that the moment you leave the confines of academia and try to do
  something no one has ever done before (e.g. start a technology company),
  the answers are no longer in the back of the book and you'll have to
  become ever more resourceful and self-directed. Towards that end, it
  is a useful exercise to read the documentation for
  the <a href="https://github.com/danwrong/restler">restler</a>,
<a href="https://github.com/wdavidw/node-csv">csv</a>, and 
<a href="http://josscrowcroft.github.io/accounting.js">accounting</a>
modules, as well as a bit about <a href="http://nodejs.org/api/process.html#process_process_argv">process.argv</a> and then refer back
to <a href="https://spark-public.s3.amazonaws.com/startup/code/market-research.js">market-research.js</a>
to compare to the corresponding module invocations therein. It's a useful
exercise to mess around with these invocations to add more parameters,
change the behavior, and otherwise modify the script.</p>
    </div>
    
    
    <div class="course-quiz-question-body">
<h3 class="course-quiz-question-number">Question 1</h3>
<div class="course-quiz-question-text">Which of the following statements is true about our use of <tt>npm</tt> and <tt>chmod</tt> before executing <tt>./market-research.js</tt>?</div>
<div class="course-quiz-options randomize"></div>
<table class="table">
<tbody><tr>
<th>Your Answer</th>
<th></th>
<th>Score</th>
<th>Explanation</th>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[1be7420308e98df8a65580329954a8e4][]" id="gensym_51d621d966eaa" value="7f45c210380c2b9e113fd4bb16d632e8" disabled="">Neither is essential, but doing this a useful practice.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[1be7420308e98df8a65580329954a8e4][]" id="gensym_51d621d9677a3" value="96c2bbed58d9e17f59926db462908ee4" checked="" disabled="">We need to both install necessary libraries and make the file executable before executing it.</td>
<td><span class="course-quiz-answer-correct" title="Correct" alt="Correct"><span class="icon-ok" alt="Correct"><span class="accessible-text-for-reader">Correct</span></span></span></td>
<td>1.00</td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[1be7420308e98df8a65580329954a8e4][]" id="gensym_51d621d968445" value="6f248b592ff543a6df3256d653f1a2a8" disabled="">Installing the libraries via <tt>npm</tt> is essential to invoking the script at the command line, but changing executability via <tt>chmod</tt> (or a similar command) is not.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[1be7420308e98df8a65580329954a8e4][]" id="gensym_51d621d968d72" value="209eb56cf92ccb5f3ea49d8f1b7f63d2" disabled="">Using <tt>chmod</tt> to change executability is essential to invoking the script at the command line, but using <tt>npm</tt> to install the libraries is not.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Total</td>
<td></td>
<td>1.00 / 1.00</td>
<td></td>
</tr>
</tbody></table>
</div><div class="course-quiz-question-body">
<h3 class="course-quiz-question-number">Question 2</h3>
<div class="course-quiz-question-text">After looking at the source of <tt>market-research.js</tt>, what variable holds the arguments sent to the script when invoked at the command line?</div>
<div class="course-quiz-options randomize"></div>
<table class="table">
<tbody><tr>
<th>Your Answer</th>
<th></th>
<th>Score</th>
<th>Explanation</th>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[bbfa01f56d8499ec887cfc33097e16ce][]" id="gensym_51d621d96c8db" value="59e80d7eadbc4e3f2d4ae5c7f0692ffe" disabled=""><tt>require.main</tt>
</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[bbfa01f56d8499ec887cfc33097e16ce][]" id="gensym_51d621d96d173" value="73afab15e158f66aed058e87d89a756a" checked="" disabled=""><tt>process.argv</tt>
</td>
<td><span class="course-quiz-answer-correct" title="Correct" alt="Correct"><span class="icon-ok" alt="Correct"><span class="accessible-text-for-reader">Correct</span></span></span></td>
<td>1.00</td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[bbfa01f56d8499ec887cfc33097e16ce][]" id="gensym_51d621d96df39" value="dc19267d7b6068320f33594217c3628a" disabled=""><tt>columns</tt>
</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[bbfa01f56d8499ec887cfc33097e16ce][]" id="gensym_51d621d96e839" value="8bd120a83d4d4d6a313057026caa06cc" disabled=""><tt>console.log</tt>
</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Total</td>
<td></td>
<td>1.00 / 1.00</td>
<td></td>
</tr>
</tbody></table>
</div><div class="course-quiz-question-body">
<h3 class="course-quiz-question-number">Question 3</h3>
<div class="course-quiz-question-text">What do the lines like <tt>symbols = symbols || SYMBOLS_DEFAULT;</tt> do?</div>
<div class="course-quiz-options randomize"></div>
<table class="table">
<tbody><tr>
<th>Your Answer</th>
<th></th>
<th>Score</th>
<th>Explanation</th>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[704a55c02ac8a53767eb5c38fdfbd21d][]" id="gensym_51d621d9728c5" value="fdf8f9ac61f6875374a026ae616c82df" disabled="">This is a JS idiom for checking that arguments are within a valid range.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[704a55c02ac8a53767eb5c38fdfbd21d][]" id="gensym_51d621d9731f2" value="2ce02dc6dab9ce66f60e8bf84a662c9c" checked="" disabled="">This is a JS idiom for setting default arguments.
</td>
<td><span class="course-quiz-answer-correct" title="Correct" alt="Correct"><span class="icon-ok" alt="Correct"><span class="accessible-text-for-reader">Correct</span></span></span></td>
<td>1.00</td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[704a55c02ac8a53767eb5c38fdfbd21d][]" id="gensym_51d621d97412b" value="93d8126d033fabca7c8cff7a9606212c" disabled="">This is a JS idiom for overriding user inputted arguments.
</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[704a55c02ac8a53767eb5c38fdfbd21d][]" id="gensym_51d621d974a9d" value="793bcc977a3c584972498ee332696214" disabled="">This is a JS idiom for setting <tt>symbols</tt> to <tt>undefined</tt>.
</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Total</td>
<td></td>
<td>1.00 / 1.00</td>
<td></td>
</tr>
</tbody></table>
</div><div class="course-quiz-question-body">
<h3 class="course-quiz-question-number">Question 4</h3>
<div class="course-quiz-question-text">Which of the following are standard <tt>node</tt> modules, included with the <a href="http://nodejs.org/api/">default install</a>?</div>
<div class="course-quiz-options randomize"></div>
<table class="table">
<tbody><tr>
<th>Your Answer</th>
<th></th>
<th>Score</th>
<th>Explanation</th>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="checkbox" name="answer[82eba0d9389d0c7d7ffd5f6a1a2df7e4][]" id="gensym_51d621d9784e6" value="b6dfd8e4a611dd8a8e80ae7233271667" disabled=""><tt>csv</tt>

</td>
<td><span class="course-quiz-answer-correct" title="Correct" alt="Correct"><span class="icon-ok" alt="Correct"><span class="accessible-text-for-reader">Correct</span></span></span></td>
<td>0.20</td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="checkbox" name="answer[82eba0d9389d0c7d7ffd5f6a1a2df7e4][]" id="gensym_51d621d9792bf" value="c61de7c32e91eb42f6399b89427017be" disabled=""><tt>restler</tt>

</td>
<td><span class="course-quiz-answer-correct" title="Correct" alt="Correct"><span class="icon-ok" alt="Correct"><span class="accessible-text-for-reader">Correct</span></span></span></td>
<td>0.20</td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="checkbox" name="answer[82eba0d9389d0c7d7ffd5f6a1a2df7e4][]" id="gensym_51d621d979fb6" value="94cb455d22b8344dcde34dc4fcbbf0da" checked="" disabled=""><tt>util</tt>
</td>
<td><span class="course-quiz-answer-correct" title="Correct" alt="Correct"><span class="icon-ok" alt="Correct"><span class="accessible-text-for-reader">Correct</span></span></span></td>
<td>0.20</td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="checkbox" name="answer[82eba0d9389d0c7d7ffd5f6a1a2df7e4][]" id="gensym_51d621d97b5bb" value="4c21321caccff8f4fe8522ca4ac4d76f" disabled=""><tt>accounting</tt>
</td>
<td><span class="course-quiz-answer-correct" title="Correct" alt="Correct"><span class="icon-ok" alt="Correct"><span class="accessible-text-for-reader">Correct</span></span></span></td>
<td>0.20</td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="checkbox" name="answer[82eba0d9389d0c7d7ffd5f6a1a2df7e4][]" id="gensym_51d621d97c5eb" value="8c0511512832e57d9d8856764dabf3dc" checked="" disabled=""><tt>fs</tt>
</td>
<td><span class="course-quiz-answer-correct" title="Correct" alt="Correct"><span class="icon-ok" alt="Correct"><span class="accessible-text-for-reader">Correct</span></span></span></td>
<td>0.20</td>
<td></td>
</tr>
<tr>
<td>Total</td>
<td></td>
<td>1.00 / 1.00</td>
<td></td>
</tr>
</tbody></table>
</div><div class="course-quiz-question-body">
<h3 class="course-quiz-question-number">Question 5</h3>
<div class="course-quiz-question-text">What is the most likely bug in the <tt>marketCapFloat</tt> function?</div>
<div class="course-quiz-options randomize"></div>
<table class="table">
<tbody><tr>
<th>Your Answer</th>
<th></th>
<th>Score</th>
<th>Explanation</th>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[d4db04dce3a460a38e85754228324231][]" id="gensym_51d621d9807d8" value="1d8a6a28bf789a8714b0f70f450f9f9d" disabled=""><tt>parseFloat</tt> should not be used here.
</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[d4db04dce3a460a38e85754228324231][]" id="gensym_51d621d981051" value="6b74721c4d4af53f89c98c5dba917d05" checked="" disabled="">No bug in this function.
</td>
<td><span class="course-quiz-answer-incorrect" title="Incorrect" alt="Incorrect"><span class="icon-remove" alt="Incorrect"><span class="accessible-text-for-reader">Inorrect</span></span></span></td>
<td>0.00</td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[d4db04dce3a460a38e85754228324231][]" id="gensym_51d621d981edc" value="cb003cfc3a5778a322893007d9cfa6c8" disabled="">It incorrectly assumes that the return value of the function should be a floating point.
</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[d4db04dce3a460a38e85754228324231][]" id="gensym_51d621d982965" value="79ddb8348da9134c97669d71f468dece" disabled="">The function currently assumes dollar values in the billions.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Total</td>
<td></td>
<td>0.00 / 1.00</td>
<td></td>
</tr>
</tbody></table>
</div><div class="course-quiz-question-body">
<h3 class="course-quiz-question-number">Question 6</h3>
<div class="course-quiz-question-text">What does <tt>csv2console</tt> do?</div>
<div class="course-quiz-options randomize"></div>
<table class="table">
<tbody><tr>
<th>Your Answer</th>
<th></th>
<th>Score</th>
<th>Explanation</th>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[7dbe3351c5203bc6accc60f54b353ad1][]" id="gensym_51d621d985f69" value="3d50e9d21e94d3e571d1594a5adf3d87" checked="" disabled="">Reads in data from <tt>csvfile</tt>, computes and formats derived quantities,      and prints these out to STDOUT.</td>
<td><span class="course-quiz-answer-correct" title="Correct" alt="Correct"><span class="icon-ok" alt="Correct"><span class="accessible-text-for-reader">Correct</span></span></span></td>
<td>1.00</td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[7dbe3351c5203bc6accc60f54b353ad1][]" id="gensym_51d621d986c10" value="9173198eb34fd20859447cac37833984" disabled="">Reads in data from <tt>csvfile</tt> and prints it out unchanged to STDOUT.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[7dbe3351c5203bc6accc60f54b353ad1][]" id="gensym_51d621d987431" value="bdc2ecf37b3fe476d53df0272512e87a" disabled="">Reads in data from the Yahoo Finance API directly.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[7dbe3351c5203bc6accc60f54b353ad1][]" id="gensym_51d621d987be0" value="7c658f32e8ac5c4cf0e185cdae5317ce" disabled="">Reads in data from <tt>csvfile</tt>, asserts that it is within range, and prints to STDOUT.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Total</td>
<td></td>
<td>1.00 / 1.00</td>
<td></td>
</tr>
</tbody></table>
</div><div class="course-quiz-question-body">
<h3 class="course-quiz-question-number">Question 7</h3>
<div class="course-quiz-question-text">What does <tt>buildfn</tt> do? (Hint: <a href="http://stackoverflow.com/questions/111102/how-do-javascript-closures-work">read
   this</a> and <a href="http://jondavidjohn.com/blog/2011/09/javascript-event-handler-persistance-with-closures">this</a>
   if you've never heard of closures.)
</div>
<div class="course-quiz-options randomize"></div>
<table class="table">
<tbody><tr>
<th>Your Answer</th>
<th></th>
<th>Score</th>
<th>Explanation</th>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[f3492c78c5592a41b7b1a5cf29b78ef4][]" id="gensym_51d621d98ae12" value="45f1dd78214321cb8c353dd428d71d1c" disabled="">Writes data from the Yahoo Finance API to <tt>csvfile</tt>.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[f3492c78c5592a41b7b1a5cf29b78ef4][]" id="gensym_51d621d98b669" value="c53a8e264cb73acf333c6bb00723657f" checked="" disabled=""> Creates and returns a function named <tt>response2console</tt>, which
     is parametrized with the values of <tt>csvfile</tt> and
     <tt>headers</tt> from the enclosing scope.</td>
<td><span class="course-quiz-answer-correct" title="Correct" alt="Correct"><span class="icon-ok" alt="Correct"><span class="accessible-text-for-reader">Correct</span></span></span></td>
<td>1.00</td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[f3492c78c5592a41b7b1a5cf29b78ef4][]" id="gensym_51d621d98c35b" value="8c0bbef139fcce106a3205b4ef5ec007" disabled="">Prints out an error message if the HTTP response returns an error.
</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[f3492c78c5592a41b7b1a5cf29b78ef4][]" id="gensym_51d621d98cae7" value="8b1098254862ad9bc44944b361db52d9" disabled="">Creates and returns a function named <tt>response2console</tt>, which
     is parametrized with the values of <tt>result</tt> and
     <tt>response</tt> from the enclosing scope.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Total</td>
<td></td>
<td>1.00 / 1.00</td>
<td></td>
</tr>
</tbody></table>
</div><div class="course-quiz-question-body">
<h3 class="course-quiz-question-number">Question 8</h3>
<div class="course-quiz-question-text"> What does the <tt>marketResearch</tt> function do?</div>
<div class="course-quiz-options randomize"></div>
<table class="table">
<tbody><tr>
<th>Your Answer</th>
<th></th>
<th>Score</th>
<th>Explanation</th>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[2b35e20a5e35c6334e0bda75d9f671c8][]" id="gensym_51d621d98fd3d" value="0b65ffffd23fd3e8519dbac6ed152c35" checked="" disabled="">Constructs a Yahoo Finance API call, and invokes code that first writes the results of that API call to disk and then reads/prints/processes said file</td>
<td><span class="course-quiz-answer-correct" title="Correct" alt="Correct"><span class="icon-ok" alt="Correct"><span class="accessible-text-for-reader">Correct</span></span></span></td>
<td>1.00</td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[2b35e20a5e35c6334e0bda75d9f671c8][]" id="gensym_51d621d9908c3" value="fd6ba076b0135192ba51b963ac0bec14" disabled="">Sets several default values and then exits.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[2b35e20a5e35c6334e0bda75d9f671c8][]" id="gensym_51d621d99102c" value="85a2913d3d66d48fe2ea361bae8e172d" disabled="">Resolves errors when invoked at the command line
</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[2b35e20a5e35c6334e0bda75d9f671c8][]" id="gensym_51d621d9917d7" value="b70233dea5956ec36f3746ff1fc5486a" disabled="">Constructs a Yahoo Finance API call and exits</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Total</td>
<td></td>
<td>1.00 / 1.00</td>
<td></td>
</tr>
</tbody></table>
</div><div class="course-quiz-question-body">
<h3 class="course-quiz-question-number">Question 9</h3>
<div class="course-quiz-question-text">What does the <tt>if(require.main == module)</tt> conditional do? Check
   all that apply. (Hint:
   see <a href="http://stackoverflow.com/questions/4981891/node-js-equivalent-of-pythons-if-name-main">here</a>
   and <a href="http://book.mixu.net/ch8.html">here (halfway down the
   page)</a> if you can't figure it out from context).
</div>
<div class="course-quiz-options randomize"></div>
<table class="table">
<tbody><tr>
<th>Your Answer</th>
<th></th>
<th>Score</th>
<th>Explanation</th>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="checkbox" name="answer[2c3e6ed540a7c22936be433db50a677c][]" id="gensym_51d621d994b0e" value="dcccfa4d723013ad0906aac2a161149a" checked="" disabled=""> Parse the stock symbols input at the command line, starting with the
     <tt>process.argv</tt> variable and producing the <tt>symbols</tt> variable.</td>
<td><span class="course-quiz-answer-correct" title="Correct" alt="Correct"><span class="icon-ok" alt="Correct"><span class="accessible-text-for-reader">Correct</span></span></span></td>
<td>0.25</td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="checkbox" name="answer[2c3e6ed540a7c22936be433db50a677c][]" id="gensym_51d621d99572d" value="5656758470b0b1806be4839fa03c3b99" checked="" disabled="">Triggers two different blocks of code, one that executes when
     <tt>market-research</tt> is invoked from the command line and one that
     executes when invoked as a module via <tt>require</tt>.
</td>
<td><span class="course-quiz-answer-correct" title="Correct" alt="Correct"><span class="icon-ok" alt="Correct"><span class="accessible-text-for-reader">Correct</span></span></span></td>
<td>0.25</td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="checkbox" name="answer[2c3e6ed540a7c22936be433db50a677c][]" id="gensym_51d621d996321" value="e6f49d8d1f7295c895bd5a6f0e9a1f85" disabled="">Confirm that the code is only being invoked as a command line app and shut down
     with an error otherwise.
</td>
<td><span class="course-quiz-answer-correct" title="Correct" alt="Correct"><span class="icon-ok" alt="Correct"><span class="accessible-text-for-reader">Correct</span></span></span></td>
<td>0.25</td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="checkbox" name="answer[2c3e6ed540a7c22936be433db50a677c][]" id="gensym_51d621d996e6c" value="911f7c1527c41a279bde984bed32acaf" disabled="">Confirm that the code is only being invoked as a library and shut down
     with an error otherwise.</td>
<td><span class="course-quiz-answer-correct" title="Correct" alt="Correct"><span class="icon-ok" alt="Correct"><span class="accessible-text-for-reader">Correct</span></span></span></td>
<td>0.25</td>
<td></td>
</tr>
<tr>
<td>Total</td>
<td></td>
<td>1.00 / 1.00</td>
<td></td>
</tr>
</tbody></table>
</div><div class="course-quiz-question-body">
<h3 class="course-quiz-question-number">Question 10</h3>
<div class="course-quiz-question-text">Why do we use <tt>console.error</tt> in addition to <tt>console.log</tt>
   (Hint: see <a href="http://nodejs.org/api/stdio.html#stdio_console">here</a>)?
</div>
<div class="course-quiz-options randomize"></div>
<table class="table">
<tbody><tr>
<th>Your Answer</th>
<th></th>
<th>Score</th>
<th>Explanation</th>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[a59eb084a8de88340c58e7b409cfa712][]" id="gensym_51d621d99af0b" value="065a63841a6677c325f073e05598f4f9" disabled=""><tt>console.error</tt> is more robust.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[a59eb084a8de88340c58e7b409cfa712][]" id="gensym_51d621d99b6c7" value="355784597b594704250d5375fc878896" checked="" disabled=""><tt>console.error</tt> prints to STDERR, while <tt>console.log</tt>
     prints to STDOUT. This allows us to print both metadata/error messages
     and actual output at the same time.</td>
<td><span class="course-quiz-answer-correct" title="Correct" alt="Correct"><span class="icon-ok" alt="Correct"><span class="accessible-text-for-reader">Correct</span></span></span></td>
<td>1.00</td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[a59eb084a8de88340c58e7b409cfa712][]" id="gensym_51d621d99c2b8" value="3bc99458f4bacb4ebe02af5bf282f789" disabled=""><tt>console.error</tt> will force the program to exit.
</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>
<input class="course-quiz-input" type="radio" name="answer[a59eb084a8de88340c58e7b409cfa712][]" id="gensym_51d621d99ca4f" value="f8f6a7de5330a29b48c1d20c7e985aca" disabled=""><tt>console.error</tt> is the same as <tt>console.log</tt>, we just
     do it for the sake of variety.</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Total</td>
<td></td>
<td>1.00 / 1.00</td>
<td></td>
</tr>
</tbody></table>
</div>
    
        
    

    </form>


            </div>
        </div>
    </div>
        
    
    <script src="./Quiz Feedback   Startup Engineering_files/webfont.js" type="text/javascript" async=""></script><script type="text/javascript" async="" src="./Quiz Feedback   Startup Engineering_files/204.min.js"></script><script type="text/javascript" async="" src="./Quiz Feedback   Startup Engineering_files/ga.js"></script><script src="./Quiz Feedback   Startup Engineering_files/spark.js"></script>

<script type="text/javascript">
    // SET UP THE MULTITRACKER
        window.logger = window.Log({level:"error"});
        var parts = location.host.split(".");
    while(parts.length > 2) { parts.shift(); }

    window.multitracker = window.MultiTracker({logger:window.logger});
    window.multitracker.register('204', window._204 = window._204 || []);
    window.multitracker.register('ga', window._gaq = window._gaq || [], 'google');

    // SET UP GA and 204
    window._gaq.push(['_setAccount', 'UA-28377374-1']);
    window._gaq.push(['_setDomainName', 'coursera.org']);
    window._gaq.push(['_setAllowLinker', true]);  
    window._gaq.push(['_trackPageview']);
    
    window._204.push({key:"pageview", val:{}});
    window._204.push(["client", "spark"]);
    window._204.push(["user", 2064792]);
    window._204.push(["domain", "." + parts.join(".")]);

    // override our multitracker queues with the ga queue when it is ready
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    
      ga.onload = ga.onreadystatechange = function() {
          ga.onreadystatechange = ga.onload = null;
          window.multitracker.get('ga').queue = window._gaq;
      };
    })();

    // override our multitracker queues with the 204 queue when it is ready
    (function() {
      var a = document.createElement('script'); a.type = 'text/javascript'; a.async = true;
      a.src = 'https://eventing.coursera.org/204.min.js';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(a, s);
      a.onload = a.onreadystatechange = function() {
          a.onreadystatechange = a.onload = null;
          window.multitracker.get('204').queue = window._204;
      };
    })();
</script>

<script>
  // Set up shared AB testing object
  (function() {
    window.ab = {};

    // we want to share the 204 session cookie with the AB session cookie...
    var sessionId = AB.makeSession("__204u", {expires:356, domain:"." + location.host});
        var debug = true;
    
    window.ab.user = window.AB(2064792, "user", {debug:debug, tracker:window.multitracker, logger:window.logger});
    window.ab.session = window.AB(sessionId, "session", {debug:debug, tracker:window.multitracker, logger:window.logger});

    if(window.CourseraABExperiments.user) {
        window.ab.user.addExperiments(window.CourseraABExperiments.user);
        window.ab.user.runExperimentsOn("body");
    }

    if(window.CourseraABExperiments.session) {
        window.ab.session.addExperiments(window.CourseraABExperiments.session);
        window.ab.session.runExperimentsOn("body");
    }
  })();
</script>


    <script>
      // Set up help widget
      (function() {
        $("[data-helpwidget]").each(function() {
            window.HelpWidget(this, {tracker: window.multitracker});
        });
       })();
 
        $("[data-readme]").each(function() {
            window.ReadMe(this);
        });
    </script>

    <script src="./Quiz Feedback   Startup Engineering_files/modal_focus.js" type="text/javascript"></script>
    <script src="./Quiz Feedback   Startup Engineering_files/get_query_parameters.js" type="text/javascript"></script>
    <script src="./Quiz Feedback   Startup Engineering_files/signature_track.js" type="text/javascript"></script>
    <script src="./Quiz Feedback   Startup Engineering_files/item_list.js" type="text/javascript"></script>
    <script src="./Quiz Feedback   Startup Engineering_files/navbar.js" type="text/javascript"></script>

    
    <script>
     // Set up help widget
      (function() {
        $("[data-helpwidget]").each(function() {
            window.HelpWidget(this, {tracker: window.multitracker});
        });
       })();
    </script>

    
    <script type="text/x-mathjax-config;executed=true">
MathJax.Hub.Config({
  config: ["MMLorHTML.js"],
  
  styleSheets: [],
  styles: {},

  jax: ["input/TeX"],
  
  extensions: ["tex2jax.js"],

  preJax: null,
  postJax: null,

  preRemoveClass: "MathJax_Preview",

  showProcessingMessages: true,

  messageStyle: "none",
  
  displayAlign: "center",
  displayIndent: "0em",
  
  delayStartupUntil: "none",

  skipStartupTypeset: false,
  
  elements: [],
  
  tex2jax: {
	    inlineMath: [
	                 ['$$','$$'],      // uncomment this for standard TeX math delimiters
	                 ['\\(','\\)']
	                 ],

	                 displayMath: [
	                 ['\\[','\\]']
	                 ],

    skipTags: ["script","noscript","style","textarea","pre","code"],
    ignoreClass: "tex2jax_ignore",
    processClass: "tex2jax_process",
    processEscapes: false,
    processEnvironments: true,
    preview: "TeX"
    
  },
  
  mml2jax: {
    preview: "alttext"
    
  },
  
  jsMath2jax: {
    preview: "TeX"
    
  },

  TeX: {
    TagSide: "right",
    TagIndent: ".8em",
    MultLineWidth: "85%",
    Macros: {},

    extensions: ["AMSmath.js", "AMSsymbols.js"]
    
  },

  //============================================================================
  //
  //  These parameters control the MathML inupt jax.
  //
  MathML: {
    //
    //  This specifies whether to use TeX spacing or MathML spacing when the
    //  HTML-CSS output jax is used.
    //
    useMathMLspacing: false
  },
  
  //============================================================================
  //
  //  These parameters control the HTML-CSS output jax.
  //
  "HTML-CSS": {
    
    scale: 100,
    
    availableFonts: ["STIX","TeX"],
    
    preferredFont: "TeX",
    
    webFont: "TeX",
    
    imageFont: "TeX",
    
    undefinedFamily: "STIXGeneral,'Arial Unicode MS',serif",
      
    showMathMenu: true,

    styles: {},
    
    tooltip: {
      delayPost: 600,          // milliseconds delay before tooltip is posted after mouseover
      delayClear: 600,         // milliseconds delay before tooltip is cleared after mouseout
      offsetX: 10, offsetY: 5  // pixels to offset tooltip from mouse position
    }
  },
  
  //============================================================================
  //
  //  These parameters control the NativeMML output jax.
  //
  NativeMML: {

    scale: 100,

    showMathMenu: true,
    showMathMenuMSIE: true,

    styles: {}
  },
  
  MathMenu: {
    delay: 400,
    
    helpURL: "http://www.mathjax.org/help/user/",

    showRenderer: true,
    showFontMenu: false,
    showContext:  false,

    windowSettings: {
      status: "no", toolbar: "no", locationbar: "no", menubar: "no",
      directories: "no", personalbar: "no", resizable: "yes", scrollbars: "yes",
      width: 100, height: 50
    },
    
    styles: {}
    
  },

  MMLorHTML: {
    prefer: {
      MSIE:    "MML",
      Firefox: "MML",
      Opera:   "HTML",
      other:   "HTML"
    }
  }
});
</script>
<script type="text/javascript">
(function () {

  function loadMathJax() {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src  = "https://duqnjvq4jwr55.cloudfront.net/2.1/MathJax.js";
    document.getElementsByTagName("head")[0].appendChild(script);
  }

  window.loadOrRefreshMathJax = function(domId) {
    if (window.MathJax) {
      if (domId) {
        MathJax.Hub.Queue(["Typeset", MathJax.Hub, domId]);
      } else {
        MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
      }
    } else {
      loadMathJax();
    }
  }
})();
</script>
            <div id="stanford_footer" style="display: none; background-color: rgb(140, 21, 21); width: 100%; height: 40px; position: absolute; top: 8741px;">
            <div style="float:right;color:white;padding-top:10px;padding-right:12px;font-size:11px;">© Stanford University, Stanford, California 94305</div>
            <div style="padding-top:9px;padding-left:12px;font-family:&#39;Crimson Text&#39;, serif;font-size:20px;color:white;font-weight:600;">Stanford University</div>
        </div>

        <script type="text/javascript">

            WebFontConfig = {
                google: { families: [ 'Crimson+Text:400:latin' ] }
            };

            (function() {
                var wf = document.createElement('script');
                wf.src = ('https:' == document.location.protocol ? 'https' : 'http') + '://ajax.googleapis.com/ajax/libs/webfont/1/webfont.js';
                wf.type = 'text/javascript';
                wf.async = 'true';
                var s = document.getElementsByTagName('script')[0];
                s.parentNode.insertBefore(wf, s);
            })();

            $(function(){
                //$('#stanford_footer').show();
                $('#stanford_footer').css({'position': 'absolute', 'top': $(document).height() + 'px'});
            });
        </script>
    
    <script type="text/javascript">
        var site_base_url = "https:\/\/www.coursera.org\/";
        var site_static_asset_url = "https:\/\/dt5zaw6a98blc.cloudfront.net\/site-static\/";
        var spark_class_short_name = "startup";
        var spark_class_id = 970374;
        var spark_class_url = "\/startup-001";
        var spark_signature_url = "https:\/\/class.coursera.org\/startup-001\/signature\/";
        
        var course_strings_name = "Startup Engineering";
        var student_full_name = "Prabhu";
    </script>

    
<script src="./Quiz Feedback   Startup Engineering_files/quiz_timer.js"></script>
<script src="./Quiz Feedback   Startup Engineering_files/get_query_parameters(1).js"></script>
<script src="./Quiz Feedback   Startup Engineering_files/quiz_attempt.js"></script>
<script src="./Quiz Feedback   Startup Engineering_files/latex_preview.js"></script>
<script src="./Quiz Feedback   Startup Engineering_files/db_class.js"></script>
<script>initRunQuery(".test_query", "run_query");</script>
<script type="text/javascript">$(function() { loadOrRefreshMathJax();})</script>




</body></html>